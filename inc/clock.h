/*!
 * @file clock.h
 * @author Mason Roach
 * @author Patrick Roy
 * @date Dec 13 2018
 *
 * @brief Function to initialize and control the clock and delays
 *
 * These functions initialize the clock to the maximum allowable frequency
 * of 168 MHz and intialize the millisecond delay 
 *
 */
#ifndef SPARK_CLK
#define SPARK_CLK

/*!
 * @brief Defines the main clock frequency
 */
#define CLOCK_FREQ 168000000UL

#include "stm32f4xx.h"
#include "core_cm4.h"

/*!
 * @brief Configure the system clock and SysTick
 *
 * This function calls SystemClock_Config and also configures
 * Systick to generate an interrupt every 1 ms.
 *
 * @return 0 on success, 1 on failure
 */
uint8_t initSystemClock(void);

/*!
 * @brief Delay for an amount of milliseconds
 *
 * @param ms The amount of milliseconds to delay
 */
void delayms(uint16_t ms);

/*!
 * @brief Configure the system clock
 *
 * This function configures the internal clock to 168 MHz using an 8 MHz
 * external oscillator with the internal PLL. This code was generated by
 * STM32CubeMX, and contains only minor modifications.
 *
 * @return 0 on success
 */
uint8_t SystemClock_Config(void);

/*!
 * @brief Systick interrupt handler
 */
void SysTick_Handler(void);

#endif

